;; -*- lisp -*-

;; ### General Setup ###
(menu-bar-mode -1)
(global-font-lock-mode t)
(set-background-color "black")
(set-foreground-color "white")

;; ### Carbon Emacs ###
(setq mac-command-modifier 'alt
      mac-option-modifier 'meta)

;; doing a replace followed by a search, uses the last search string
(setq query-replace-interactive t)

;; flymake colors
;;(set-face-background 'flymake-errline "red4")
;;(set-face-background 'flymake-warnline "dark slate blue")

;; default tab width to four spaces
(setq default-tab-width 2)
(setq-default indent-tabs-mode nil)

;; title bar shows name of current buffer ;;
(setq frame-title-format '("emacs: %*%+ %b"))

;; don't show the startup message every time, I know I'm using emacs
(setq inhibit-startup-message t)

;; Don't truncate, wrap, or fold lines of split windows
(setq truncate-partial-width-windows nil)
(setq truncate-lines nil)

;; use y or n instead of yes or no
(fset 'yes-or-no-p 'y-or-n-p)

;; default mode and fill
(setq default-major-mode 'text-mode)

;; http://www.emacsblog.org/2007/01/17/indent-whole-buffer/
(defun iwb ()
  "indent whole buffer"
  (interactive)
  (delete-trailing-whitespace)
  (indent-region (point-min) (point-max) nil)
  (untabify (point-min) (point-max)))

;;; ### Set up Keybindings ###
(global-set-key "\M-1" 'compile)
(global-set-key "\M-g" 'goto-line)
(global-set-key "\M-i" 'indent-region)

;; Dired remove directories
(setq dired-recursive-deletes t)

;; (put 'upcase-region 'disabled nil)

;; fix annoying shell backspace problem
;; 0 for ibook/macbook, 1 for imac
(normal-erase-is-backspace-mode 0)

;; http://trey-jackson.blogspot.com/2008/01/emacs-tip-11-uniquify.html
(require 'uniquify)
(setq uniquify-buffer-name-style 'reverse)
(setq uniquify-separator "/")
(setq uniquify-after-kill-buffer-p t)    ; rename after killing
                                        ; uniquified
(setq uniquify-ignore-buffers-re "^\\*") ; don't muck with special
                                        ; buffers

;; http://www.emacsblog.org/2007/02/08/quick-tip-dired-recursive-deletes/
(setq dired-recursive-deletes 'top)

;; http://cvs.savannah.gnu.org/viewvc/*checkout*/emacs/emacs/lisp/emacs-lisp/re-builder.el

;; Add color to a shell running in emacs 'M-x shell'
;(autoload 'ansi-color-for-comint-mode-on 'ansi-color' nil t)
;(add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on)
(add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on)

;; Brian Harvey Navigation
(defun point-to-top ()
  "Put point on top line of window."
  (interactive)
  (move-to-window-line 0))

(defun point-to-bottom ()
  "Put point at beginning of last visible line."
  (interactive)
  (move-to-window-line -1))

(defun indent-or-complete ()
  "Complete if point is at end of a word, otherwise indent line."
  (interactive)
  (if (looking-at "\\>")
      (dabbrev-expand nil)
    (indent-for-tab-command)
    ))

(defun next-line-noscroll ()
  "Scroll the buffer one line down without moving where point is."
  (interactive)
  (next-line -1)
  (scroll-down 1))

(defun previous-line-noscroll ()
  "Scroll the buffer one line up without moving where point is."
  (interactive)
  (next-line 1)
  (scroll-down -1))

(defun next-line-other-window ()
  "Scroll the other window one line up"
  (interactive)
  (next-line 1)
  (scroll-down -1))

(global-set-key "\M-3" 'point-to-top)
(global-set-key "\M-4" 'point-to-bottom)
(global-set-key "\M-n" 'next-line-noscroll)
(global-set-key "\M-p" 'previous-line-noscroll)

;;; ### Plugin Initialization ###
(setq plugins-to-load '(
;;			"harvey-navigation"
;;			"javascript"
;;			"dsvn"
;;			"ruby"
;;                      "ido"
;;			"rdebug"
			))

;; add to "~/.emacs.d/plugins/__plugins-to-load__ to load-path
(let* ((my-lisp-dir "~/.dotfiles/emacs/emacs.d/plugins")
       (default-directory my-lisp-dir))
  (setq load-path (cons my-lisp-dir load-path))
  (normal-top-level-add-to-load-path plugins-to-load))

;; run the init file for the plugin
(mapcar (lambda (plugin-name)
          (load (concat "load-" plugin-name ".el")))
        plugins-to-load)
